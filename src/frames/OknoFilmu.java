/**
 *
 * @author Marcin Świerkocki
 */
 
public class OknoFilmu extends javax.swing.JFrame {

        private Film film;
        GlowneOkno parent;
        public boolean czyNowy = false;
        private ObservableList<TypFilmow> typList  = new ObservableCollections().observableList(new ArrayList<TypFilmow>());   ;
public static final String PROP_TYPLIST = "example";
    public ObservableList<TypFilmow> getTypList() {
        return typList;
    }

    public void setTypList(ObservableList<TypFilmow> typList) {
        
        ObservableList<TypFilmow> old = this.typList;
        this.typList = typList;
        firePropertyChange(PROP_TYPLIST, typList, old);
    }

Map<String,TypFilmow> example = new HashMap<String,TypFilmow>();
public static final String PROP_EXAMPLE = "example";
    public Map<String, TypFilmow> getExample() {
        return example;
    }

    public void setExample(Map<String, TypFilmow> example) {
        
        Map<String, TypFilmow> exampleold = this.example;
        
        this.example = example;
        firePropertyChange(PROP_FILM, example, exampleold);
    }

    public static final String PROP_FILM = "film";

    /**
     * Get the value of film
     *
     * @return the value of film
     */
    public Film getFilm() {
        return film;
    }

    /**
     * Set the value of film
     *
     * @param film new value of film
     */
    public void setFilm(Film film) {
        Film oldFilm = this.film;
        this.film = film;
        firePropertyChange(PROP_FILM, oldFilm, film);
    }
    /**
     * Creates new form OknoFilmu
     */
    
    private TypFilmow wybranyTyp;
    
    public static final String PROP_WYBRANYTYP = "wybranyTyp";

    /**
     * Get the value of wybranyTyp
     *
     * @return the value of wybranyTyp
     */
    public TypFilmow getWybranyTyp() {
        return wybranyTyp;
    }

    /**
     * Set the value of wybranyTyp
     *
     * @param wybranyTyp new value of wybranyTyp
     */
    public void setWybranyTyp(TypFilmow wybranyTyp) {
        TypFilmow oldWybranyTyp = this.wybranyTyp;
        this.wybranyTyp = wybranyTyp;
        firePropertyChange(PROP_WYBRANYTYP, oldWybranyTyp, wybranyTyp);
    }

    private String nazwaTypu = "";

    public static final String PROP_NAZWATYPU = "nazwaTypu";

    /**
     * Get the value of nazwaTypu
     *
     * @return the value of nazwaTypu
     */
    public String getNazwaTypu() {
        return nazwaTypu;
    }

    /**
     * Set the value of nazwaTypu
     *
     * @param nazwaTypu new value of nazwaTypu
     */
    public void setNazwaTypu(String nazwaTypu) {
        String oldNazwaTypu = this.nazwaTypu;
        this.nazwaTypu = nazwaTypu;
        firePropertyChange(PROP_NAZWATYPU, oldNazwaTypu, nazwaTypu);
    }

    public OknoFilmu(Film f,GlowneOkno p) {
        this.film = f;
        LoadTypTask task = new LoadTypTask(typList, p.getPolaczenie().getConnection());
        task.execute();
        this.parent = p;
        if(f == null)
            System.out.println("NoTypes!");
        else{
        wybranyTyp = f.getTyp();
        System.out.println(wybranyTyp.getTyp());
        }
        
        initComponents();
        jButton1.setEnabled(parent.getPracownik().checkPermission(Pracownik.IPersmisions.MODYFIKOWANIE_FILMOW));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Szczegóły filmu"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${film.opis}"), jTextArea1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("Opis");

        jButton1.setText("Zapisz");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Wróć");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${film.tytul}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${typList}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${wybranyTyp}"), jComboBox1, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jLabel1.setText("Tytuł:");

        jLabel2.setText("Typ:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(125, 125, 125)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(41, 41, 41)
                .addComponent(jButton2)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        this.dispose();        // TODO add your handling code here:
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
        Statement statement = null;

        if(jTextField1.getText().isEmpty()||jTextArea1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pole tytul i Opis nie moga być puste!", "Blad", 1);
            } else try{
                statement = parent.getPolaczenie().getConnection().createStatement();
                int result    = 0;
                try{
                    String sql;
                    
                    if(!czyNowy){
                        sql = "Update Filmy SET opis = '"+film.getOpis()+"',typ='"+String.valueOf(wybranyTyp.getId())+"',tytul='"+film.getTytul()+"' Where uid = "+film.getID() ;
                      
                        result = statement.executeUpdate(sql);
                    }
                    
                    else{
                        sql = "Insert Into Filmy(uid,Tytul,Opis,Zdjecie,Typ) values (default,'"+film.getTytul()+"','"+film.getOpis()+"','"+film.getZdjecie()+"','"+wybranyTyp.getId()+"');";
                        result = statement.executeUpdate(sql,statement.RETURN_GENERATED_KEYS);
                        
                        ResultSet rs = statement.getGeneratedKeys();
                        rs.next();
                        int lastID = rs.getInt(1);
                        System.out.println(lastID);
                        sql = "Insert Into Magazyn values (default,"+String.valueOf(lastID)+",0,0);";
                        result = statement.executeUpdate(sql);
                    }
                }catch (SQLException ex) {
                    System.out.println(ex.getLocalizedMessage());
                }
            } catch (SQLException ex) {
                System.out.println(ex.getLocalizedMessage());
            }
                // TODO add your handling code here:
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
